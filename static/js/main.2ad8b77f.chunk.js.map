{"version":3,"sources":["redux/contacts/contacts-actions.js","redux/contacts/contacts-reducer.js","redux/store.js","redux/contacts/contact-operations.js","redux/contacts/contacts-selectors.js","components/Form/Form.js","components/Filter/Filter.js","components/Contacts/Contacts.js","App.js","index.js"],"names":["asyncGetContacts","createAction","fetchContactRequest","fetchContactSuccess","fetchContactError","addContactRequest","addContactSuccess","addContactError","delContactRequest","delContactSuccess","delContactError","delContacts","filterContacts","items","createReducer","_","payload","state","map","item","name","includes","alert","filter","id","loading","combineReducers","store","configureStore","reducer","contacts","contactsReducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","concat","logger","devTools","process","axiosInstance","axios","create","baseURL","fetchContacts","dispatch","get","then","data","console","log","catch","error","addContact","number","post","contactsId","delete","getContacts","getFilter","getLoading","allContacts","contact","toLocaleLowerCase","Form","useState","setName","setNumber","useDispatch","handleChange","e","currentTarget","value","reset","className","onSubmit","preventDefault","contactsOperations","type","pattern","title","onChange","required","Filter","useSelector","contactsSelectors","contactsActions","connect","useEffect","onClick","onDelete","App","ReactDOM","render","StrictMode","document","querySelector"],"mappings":"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","file":"static/js/main.2ad8b77f.chunk.js","sourcesContent":["import { createAction } from '@reduxjs/toolkit';\r\n\r\nconst asyncGetContacts = createAction('contacts/get');\r\nexport default { asyncGetContacts };\r\n\r\nexport const fetchContactRequest = createAction('contacts/fetchContactRequest');\r\nexport const fetchContactSuccess = createAction('contacts/fetchContactSuccess');\r\nexport const fetchContactError = createAction('contacts/fetchContactError');\r\n\r\nexport const addContactRequest = createAction('contacts/addContactRequest');\r\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\r\nexport const addContactError = createAction('contacts/addContactError');\r\n\r\nexport const delContactRequest = createAction('contacts/delContactRequest');\r\nexport const delContactSuccess = createAction('contacts/delContactSuccess');\r\nexport const delContactError = createAction('contacts/delContactError');\r\n\r\nexport const delContacts = createAction('contacts/DELETE');\r\nexport const filterContacts = createAction('contacts/FILTER');\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\n\r\nimport {\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  delContactRequest,\r\n  delContactSuccess,\r\n  delContactError,\r\n  fetchContactRequest,\r\n  fetchContactSuccess,\r\n  fetchContactError,\r\n  filterContacts,\r\n} from './contacts-actions';\r\n\r\nconst items = createReducer([], {\r\n  [fetchContactSuccess]: (_, { payload }) => payload,\r\n  [addContactSuccess]: (state, { payload }) => {\r\n    let namesArray = state.map(item => item.name);\r\n    if (!namesArray.includes(payload.name)) {\r\n      return [...state, payload];\r\n    } else {\r\n      alert(`${payload.name} is already in contacts!`);\r\n      return state;\r\n    }\r\n  },\r\n  [delContactSuccess]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [filterContacts]: (_, { payload }) => payload,\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n  [fetchContactRequest]: () => true,\r\n  [fetchContactSuccess]: () => false,\r\n  [fetchContactError]: () => false,\r\n\r\n  [addContactRequest]: () => true,\r\n  [addContactSuccess]: () => false,\r\n  [addContactError]: () => false,\r\n\r\n  [delContactRequest]: () => true,\r\n  [delContactSuccess]: () => false,\r\n  [delContactError]: () => false,\r\n});\r\n\r\nexport default combineReducers({ items, filter, loading });\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport logger from 'redux-logger';\r\nimport {\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\n\r\nimport contactsReducer from './contacts/contacts-reducer';\r\n\r\nconst store = configureStore({\r\n  reducer: { contacts: contactsReducer },\r\n  middleware: getDefaultMiddleware =>\r\n    getDefaultMiddleware({\r\n      serializableCheck: {\r\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n      },\r\n    }).concat(logger),\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nexport default store;\r\n","import axios from 'axios';\r\nimport {\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  delContactRequest,\r\n  delContactSuccess,\r\n  delContactError,\r\n  fetchContactRequest,\r\n  fetchContactSuccess,\r\n  fetchContactError,\r\n} from './contacts-actions';\r\n\r\nconst axiosInstance = axios.create({\r\n  baseURL: 'https://6191605e41928b001769003f.mockapi.io',\r\n});\r\n\r\nexport const fetchContacts = () => dispatch => {\r\n  dispatch(fetchContactRequest());\r\n\r\n  axiosInstance\r\n    .get('/contacts')\r\n    .then(({ data }) => {\r\n      console.log('data', data);\r\n      dispatch(fetchContactSuccess(data.items));\r\n    })\r\n    .catch(error => dispatch(fetchContactError(error)));\r\n};\r\nexport const addContact =\r\n  ({ name, number }) =>\r\n  dispatch => {\r\n    const contacts = { name, number };\r\n    dispatch(addContactRequest());\r\n\r\n    axiosInstance\r\n      .post('/contacts', contacts)\r\n      .then(({ data }) => dispatch(addContactSuccess(data)))\r\n      .catch(error => dispatch(addContactError(error)));\r\n  };\r\n\r\nexport const delContacts = contactsId => dispatch => {\r\n  dispatch(delContactRequest());\r\n\r\n  axiosInstance\r\n    .delete(`/contacts/${contactsId}`)\r\n    .then(() => dispatch(delContactSuccess(contactsId)))\r\n    .catch(error => dispatch(delContactError(error)));\r\n};\r\n","export const getContacts = state => state.contacts.items;\r\nexport const getFilter = state => state.contacts.filter;\r\nexport const getLoading = state => state.contacts.loading;\r\n\r\nexport const filterContacts = state => {\r\n  const allContacts = getContacts(state);\r\n  const filter = getFilter(state);\r\n  return allContacts.filter(contact =>\r\n    contact.name.toLocaleLowerCase().includes(filter.toLocaleLowerCase()),\r\n  );\r\n};\r\n","import { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { contactsOperations } from 'redux/contacts';\r\n\r\nexport default function Form() {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const handleChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n\r\n      case 'number':\r\n        setNumber(value);\r\n        break;\r\n\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n  const onSubmit = (name, number) =>\r\n    dispatch(contactsOperations.addContact(name, number));\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    onSubmit({ name, number });\r\n    reset();\r\n  };\r\n\r\n  const reset = () => {\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  return (\r\n    <form className=\"form\" onSubmit={handleSubmit}>\r\n      <label>\r\n        <p className=\"form__lable\">Name </p>\r\n        <input\r\n          className=\"form__input\"\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          value={name}\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n      </label>\r\n      <label className=\"form__lable\">\r\n        <p className=\"form__lable\"> Number</p>\r\n        <input\r\n          className=\"form__input\"\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки\"\r\n          value={number}\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n      </label>\r\n\r\n      <button type=\"submit\" className=\"button\">\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n","import { useSelector, useDispatch } from 'react-redux';\r\nimport { contactsSelectors, contactsActions } from 'redux/contacts';\r\n\r\nexport default function Filter() {\r\n  const value = useSelector(contactsSelectors.getFilter);\r\n  console.log('value', value);\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <div className=\"filter-container\">\r\n      <p className=\"title-text\">Find contacts by name</p>\r\n      <input\r\n        className=\"form__input\"\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        value={value}\r\n        onChange={e =>\r\n          dispatch(contactsActions.filterContacts(e.currentTarget.value))\r\n        }\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import { useEffect } from 'react';\r\nimport { useSelector, useDispatch, connect } from 'react-redux';\r\nimport { contactsOperations, contactsSelectors } from 'redux/contacts';\r\n\r\nfunction Contacts() {\r\n  const contacts = useSelector(contactsSelectors.filterContacts);\r\n  const dispatch = useDispatch();\r\n  const onDelete = id => dispatch(contactsOperations.delContacts(id));\r\n\r\n  useEffect(() => dispatch(contactsOperations.fetchContacts()), [dispatch]);\r\n\r\n  return (\r\n    <ul className=\"contact-list\">\r\n      {contacts.map(({ id, name, number }) => {\r\n        return (\r\n          <li className=\"contact-list__item\" key={id}>\r\n            <p>{name}</p>\r\n            <p>{number}</p>\r\n            <button className=\"button\" id={id} onClick={() => onDelete(id)}>\r\n              Delete contact\r\n            </button>\r\n          </li>\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n}\r\nconst mapDispatchToProps = dispatch => ({\r\n  fetchContacts: () => dispatch(contactsOperations.fetchContacts()),\r\n});\r\nexport default connect(null, mapDispatchToProps)(Contacts);\r\n","import Form from './components/Form/Form';\nimport Filter from './components/Filter/Filter';\nimport Contacts from './components/Contacts/Contacts';\nimport './components/Form/Form.css';\n\nexport default function App() {\n  return (\n    <div className=\"container\">\n      <h1 className=\"title\">Phonebook</h1>\n      <Form />\n      <h2 className=\"title\">Contacts</h2>\n      <Filter />\n      <Contacts />\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nimport './index.css';\n\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.querySelector('#root'),\n);\n"],"sourceRoot":""}